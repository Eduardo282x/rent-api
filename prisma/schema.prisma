generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Rent {
  idRent         Int     @id @default(autoincrement())
  nameRent       String  @db.VarChar(200)
  address        String  @db.VarChar(200)
  addressDetails String  @db.VarChar(512)
  typeRent       Int
  rooms          Int
  bathrooms      Int
  hall           Int
  parking        Int
  urbanization   String
  avenue         String
  days           Int
  date           DateTime
  north          Decimal @db.Decimal(10, 6)
  east           Decimal @db.Decimal(10, 6)
  west           Decimal @db.Decimal(10, 6)
  south          Decimal @db.Decimal(10, 6)
  info           String  @db.VarChar(512)
  price          Decimal @db.Decimal(10, 2)
  squareMeters   Decimal @db.Decimal(10, 2)
  typerent       Type    @relation(fields: [typeRent], references: [idType])
  images         String  @db.VarChar(200)
  idClient       Int?
  autorizated    Boolean
  autorizationId Int?
  client         Users?   @relation("ClientRent", fields: [idClient], references: [idUsers])
  autorization   Users?   @relation("AuthorizationRent", fields: [autorizationId], references: [idUsers])
  sales          Sales[]
}

model Roles {
  idRol Int     @id @default(autoincrement())
  rol   String  @db.VarChar(100)
  users Users[]
}

model Sales {
  idSales  Int      @id @default(autoincrement())
  idUser   Int
  users    Users    @relation(fields: [idUser], references: [idUsers])
  idClient Int
  idRent   Int
  dafe     DateTime
  idState  Int
  state    State    @relation(fields: [idState], references: [idState])
  rent     Rent     @relation(fields: [idRent], references: [idRent])
}

model State {
  idState Int     @id @default(autoincrement())
  state   String
  sales   Sales[]
}

model Type {
  idType   Int    @id @default(autoincrement())
  nameType String @db.VarChar(200)
  rent     Rent[]
}

model Users {
  idUsers            Int     @id @default(autoincrement())
  name               String
  lastname           String
  identify           String
  email              String
  phone              String
  password           String
  civil              String
  rol                Int
  roles              Roles   @relation(fields: [rol], references: [idRol])
  sales              Sales[]
  clientRents        Rent[]  @relation("ClientRent")
  authorizationRents Rent[]  @relation("AuthorizationRent")
}

model Locations {
  IdLocation Int    @id @default(autoincrement())
  location   String
}
